<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Start-TssLog</command:name>
      <command:verb>Start</command:verb>
      <command:noun>TssLog</command:noun>
      <maml:description>
        <maml:para>Creates an initial log file with a header.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Creates a log file (will delete if the name already exists) and adds a formatted header.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Start-TssLog</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>LogFilePath</maml:name>
          <maml:description>
            <maml:para>Full file path to the log file to create</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>LogFormat</maml:name>
          <maml:description>
            <maml:para>Format of log to generate, default to LOG; allowed: log, csv</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">log</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">csv</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Log</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>ScriptVersion</maml:name>
          <maml:description>
            <maml:para>Script Version to include as reference in the log file header</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>LogFilePath</maml:name>
        <maml:description>
          <maml:para>Full file path to the log file to create</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>LogFormat</maml:name>
        <maml:description>
          <maml:para>Format of log to generate, default to LOG; allowed: log, csv</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Log</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>ScriptVersion</maml:name>
        <maml:description>
          <maml:para>Script Version to include as reference in the log file header</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>$newLog = New-TemporaryFile
Start-TssLog -LogFilePath $newLog.FullName -ScriptVersion '1.0.4'</dev:code>
        <dev:remarks>
          <maml:para>Generate a new temporary file to use as a log, writing Script version of 1.0.4.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://thycotic-ps.github.io/thycotic.secretserver/commands/logging/Start-TssLog</maml:linkText>
        <maml:uri>https://thycotic-ps.github.io/thycotic.secretserver/commands/logging/Start-TssLog</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://github.com/thycotic-ps/thycotic.secretserver/blob/main/src/Thycotic.SecretServer/cmdlets/logging/StartLogCmdlet.cs</maml:linkText>
        <maml:uri>https://github.com/thycotic-ps/thycotic.secretserver/blob/main/src/Thycotic.SecretServer/cmdlets/logging/StartLogCmdlet.cs</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Stop-TssLog</command:name>
      <command:verb>Stop</command:verb>
      <command:noun>TssLog</command:noun>
      <maml:description>
        <maml:para>Adds footer to the end of the log file.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Appends a footer to the log file to "close" the logging process. This should be called at the end of your script or workflow.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Stop-TssLog</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>LogFilePath</maml:name>
          <maml:description>
            <maml:para>Full file path to the log file to create</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>LogFormat</maml:name>
          <maml:description>
            <maml:para>Format of log to generate, default to LOG; allowed: log, csv</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">log</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">csv</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Log</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>LogFilePath</maml:name>
        <maml:description>
          <maml:para>Full file path to the log file to create</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>LogFormat</maml:name>
        <maml:description>
          <maml:para>Format of log to generate, default to LOG; allowed: log, csv</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Log</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Stop-TssLog -LogFilePath $newLog.FullName</dev:code>
        <dev:remarks>
          <maml:para>Log file from the Start-TssLog call passed in and footer written to the file.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://thycotic-ps.github.io/thycotic.secretserver/commands/logging/Stop-TssLog</maml:linkText>
        <maml:uri>https://thycotic-ps.github.io/thycotic.secretserver/commands/logging/Stop-TssLog</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://github.com/thycotic-ps/thycotic.secretserver/blob/main/src/Thycotic.SecretServer/cmdlets/logging/StopLogCmdlet.cs</maml:linkText>
        <maml:uri>https://github.com/thycotic-ps/thycotic.secretserver/blob/main/src/Thycotic.SecretServer/cmdlets/logging/StopLogCmdlet.cs</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Write-TssLog</command:name>
      <command:verb>Write</command:verb>
      <command:noun>TssLog</command:noun>
      <maml:description>
        <maml:para>Writes message to the log file.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Writes the message provided by appending. This is used during your script process or workflow to add messages based on the MessageType desired (error, warning, info, etc.).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Write-TssLog</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
          <maml:name>LogFilePath</maml:name>
          <maml:description>
            <maml:para>Full file path to the log file</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>LogFormat</maml:name>
          <maml:description>
            <maml:para>Format of log to generate, default to LOG; allowed: log, csv</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">log</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">csv</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Log</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>MessageType</maml:name>
          <maml:description>
            <maml:para>Message type to write to the log, default INFO (allowed INFO, WARNING, ERROR, FATAL)</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">INFO</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WARNING</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ERROR</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FATAL</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">INFO</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WARNING</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ERROR</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FATAL</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>INFO</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>Divider</maml:name>
          <maml:description>
            <maml:para>Switch to indicate a divider is appended to the log file.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
          <maml:name>DividerCharacter</maml:name>
          <maml:description>
            <maml:para>The character to use for the divider, autogenerates 120-character divider and append to the log file. Defaults to plus-sign (+)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-TssLog</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
          <maml:name>LogFilePath</maml:name>
          <maml:description>
            <maml:para>Full file path to the log file</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>LogFormat</maml:name>
          <maml:description>
            <maml:para>Format of log to generate, default to LOG; allowed: log, csv</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">log</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">csv</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Log</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>MessageType</maml:name>
          <maml:description>
            <maml:para>Message type to write to the log, default INFO (allowed INFO, WARNING, ERROR, FATAL)</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">INFO</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WARNING</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ERROR</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FATAL</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">INFO</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WARNING</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ERROR</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FATAL</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>INFO</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="3" aliases="none">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>Message to append to the log</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>Divider</maml:name>
        <maml:description>
          <maml:para>Switch to indicate a divider is appended to the log file.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
        <maml:name>DividerCharacter</maml:name>
        <maml:description>
          <maml:para>The character to use for the divider, autogenerates 120-character divider and append to the log file. Defaults to plus-sign (+)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
        <maml:name>LogFilePath</maml:name>
        <maml:description>
          <maml:para>Full file path to the log file</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>LogFormat</maml:name>
        <maml:description>
          <maml:para>Format of log to generate, default to LOG; allowed: log, csv</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Log</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="3" aliases="none">
        <maml:name>Message</maml:name>
        <maml:description>
          <maml:para>Message to append to the log</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
        <maml:name>MessageType</maml:name>
        <maml:description>
          <maml:para>Message type to write to the log, default INFO (allowed INFO, WARNING, ERROR, FATAL)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>INFO</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Write-TssLog -LogFilePath $newLog.FullName -LogFormat 'log' -MessageType ERROR -Message "Issue capturing secret details: $($_.Exception)"</dev:code>
        <dev:remarks>
          <maml:para>Appends an informational message including an error's exception (added to the catch block of a call to a function) using LOG format.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Write-TssLog -LogFilePath $newLog.FullName -LogFormat 'csv' -MessageType ERROR -Message "Issue capturing secret details: $($_.Exception)"</dev:code>
        <dev:remarks>
          <maml:para>Appends an informational message including an error's exception (added to the catch block of a call to a function) using CSV format.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://thycotic-ps.github.io/thycotic.secretserver/commands/logging/Write-TssLog</maml:linkText>
        <maml:uri>https://thycotic-ps.github.io/thycotic.secretserver/commands/logging/Write-TssLog</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://github.com/thycotic-ps/thycotic.secretserver/blob/main/src/Thycotic.SecretServer/cmdlets/logging/WriteLogCmdlet.cs</maml:linkText>
        <maml:uri>https://github.com/thycotic-ps/thycotic.secretserver/blob/main/src/Thycotic.SecretServer/cmdlets/logging/WriteLogCmdlet.cs</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>